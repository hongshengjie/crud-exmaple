// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: proto/alltypetable.api.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AllTypeTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//自增id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//小整型
	TInt int64 `protobuf:"varint,2,opt,name=t_int,json=tInt,proto3" json:"t_int,omitempty"`
	//
	SInt int64 `protobuf:"varint,3,opt,name=s_int,json=sInt,proto3" json:"s_int,omitempty"`
	//中整数
	MInt int64 `protobuf:"varint,4,opt,name=m_int,json=mInt,proto3" json:"m_int,omitempty"`
	//
	BInt int64 `protobuf:"varint,5,opt,name=b_int,json=bInt,proto3" json:"b_int,omitempty"`
	//
	F32 float32 `protobuf:"fixed32,6,opt,name=f32,proto3" json:"f32,omitempty"`
	//
	F64 float64 `protobuf:"fixed64,7,opt,name=f64,proto3" json:"f64,omitempty"`
	//
	DecimalMysql float64 `protobuf:"fixed64,8,opt,name=decimal_mysql,json=decimalMysql,proto3" json:"decimal_mysql,omitempty"`
	//
	CharM string `protobuf:"bytes,9,opt,name=char_m,json=charM,proto3" json:"char_m,omitempty"`
	//
	VarcharM string `protobuf:"bytes,10,opt,name=varchar_m,json=varcharM,proto3" json:"varchar_m,omitempty"`
	//
	JsonM string `protobuf:"bytes,11,opt,name=json_m,json=jsonM,proto3" json:"json_m,omitempty"`
	//
	NvarcharM string `protobuf:"bytes,12,opt,name=nvarchar_m,json=nvarcharM,proto3" json:"nvarchar_m,omitempty"`
	//
	NcharM string `protobuf:"bytes,13,opt,name=nchar_m,json=ncharM,proto3" json:"nchar_m,omitempty"`
	//
	TimeM string `protobuf:"bytes,14,opt,name=time_m,json=timeM,proto3" json:"time_m,omitempty"`
	//
	DateM string `protobuf:"bytes,15,opt,name=date_m,json=dateM,proto3" json:"date_m,omitempty"`
	//
	DataTimeM string `protobuf:"bytes,16,opt,name=data_time_m,json=dataTimeM,proto3" json:"data_time_m,omitempty"`
	//创建时间
	TimestampM string `protobuf:"bytes,17,opt,name=timestamp_m,json=timestampM,proto3" json:"timestamp_m,omitempty"`
	//更新时间
	TimestampUpdate string `protobuf:"bytes,18,opt,name=timestamp_update,json=timestampUpdate,proto3" json:"timestamp_update,omitempty"`
	//年
	YearM string `protobuf:"bytes,19,opt,name=year_m,json=yearM,proto3" json:"year_m,omitempty"`
	//
	TText string `protobuf:"bytes,20,opt,name=t_text,json=tText,proto3" json:"t_text,omitempty"`
	//
	MText string `protobuf:"bytes,21,opt,name=m_text,json=mText,proto3" json:"m_text,omitempty"`
	//
	TextM string `protobuf:"bytes,22,opt,name=text_m,json=textM,proto3" json:"text_m,omitempty"`
	//
	LText string `protobuf:"bytes,23,opt,name=l_text,json=lText,proto3" json:"l_text,omitempty"`
	//
	BinaryM []byte `protobuf:"bytes,24,opt,name=binary_m,json=binaryM,proto3" json:"binary_m,omitempty"`
	//
	BlobM []byte `protobuf:"bytes,25,opt,name=blob_m,json=blobM,proto3" json:"blob_m,omitempty"`
	//
	LBlob []byte `protobuf:"bytes,26,opt,name=l_blob,json=lBlob,proto3" json:"l_blob,omitempty"`
	//
	MBlob []byte `protobuf:"bytes,27,opt,name=m_blob,json=mBlob,proto3" json:"m_blob,omitempty"`
	//
	TBlob []byte `protobuf:"bytes,28,opt,name=t_blob,json=tBlob,proto3" json:"t_blob,omitempty"`
	//
	BitM []byte `protobuf:"bytes,29,opt,name=bit_m,json=bitM,proto3" json:"bit_m,omitempty"`
	//
	EnumM string `protobuf:"bytes,30,opt,name=enum_m,json=enumM,proto3" json:"enum_m,omitempty"`
	//
	SetM string `protobuf:"bytes,31,opt,name=set_m,json=setM,proto3" json:"set_m,omitempty"`
	//
	BoolM int64 `protobuf:"varint,32,opt,name=bool_m,json=boolM,proto3" json:"bool_m,omitempty"`
}

func (x *AllTypeTable) Reset() {
	*x = AllTypeTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_alltypetable_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllTypeTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllTypeTable) ProtoMessage() {}

func (x *AllTypeTable) ProtoReflect() protoreflect.Message {
	mi := &file_proto_alltypetable_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllTypeTable.ProtoReflect.Descriptor instead.
func (*AllTypeTable) Descriptor() ([]byte, []int) {
	return file_proto_alltypetable_api_proto_rawDescGZIP(), []int{0}
}

func (x *AllTypeTable) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AllTypeTable) GetTInt() int64 {
	if x != nil {
		return x.TInt
	}
	return 0
}

func (x *AllTypeTable) GetSInt() int64 {
	if x != nil {
		return x.SInt
	}
	return 0
}

func (x *AllTypeTable) GetMInt() int64 {
	if x != nil {
		return x.MInt
	}
	return 0
}

func (x *AllTypeTable) GetBInt() int64 {
	if x != nil {
		return x.BInt
	}
	return 0
}

func (x *AllTypeTable) GetF32() float32 {
	if x != nil {
		return x.F32
	}
	return 0
}

func (x *AllTypeTable) GetF64() float64 {
	if x != nil {
		return x.F64
	}
	return 0
}

func (x *AllTypeTable) GetDecimalMysql() float64 {
	if x != nil {
		return x.DecimalMysql
	}
	return 0
}

func (x *AllTypeTable) GetCharM() string {
	if x != nil {
		return x.CharM
	}
	return ""
}

func (x *AllTypeTable) GetVarcharM() string {
	if x != nil {
		return x.VarcharM
	}
	return ""
}

func (x *AllTypeTable) GetJsonM() string {
	if x != nil {
		return x.JsonM
	}
	return ""
}

func (x *AllTypeTable) GetNvarcharM() string {
	if x != nil {
		return x.NvarcharM
	}
	return ""
}

func (x *AllTypeTable) GetNcharM() string {
	if x != nil {
		return x.NcharM
	}
	return ""
}

func (x *AllTypeTable) GetTimeM() string {
	if x != nil {
		return x.TimeM
	}
	return ""
}

func (x *AllTypeTable) GetDateM() string {
	if x != nil {
		return x.DateM
	}
	return ""
}

func (x *AllTypeTable) GetDataTimeM() string {
	if x != nil {
		return x.DataTimeM
	}
	return ""
}

func (x *AllTypeTable) GetTimestampM() string {
	if x != nil {
		return x.TimestampM
	}
	return ""
}

func (x *AllTypeTable) GetTimestampUpdate() string {
	if x != nil {
		return x.TimestampUpdate
	}
	return ""
}

func (x *AllTypeTable) GetYearM() string {
	if x != nil {
		return x.YearM
	}
	return ""
}

func (x *AllTypeTable) GetTText() string {
	if x != nil {
		return x.TText
	}
	return ""
}

func (x *AllTypeTable) GetMText() string {
	if x != nil {
		return x.MText
	}
	return ""
}

func (x *AllTypeTable) GetTextM() string {
	if x != nil {
		return x.TextM
	}
	return ""
}

func (x *AllTypeTable) GetLText() string {
	if x != nil {
		return x.LText
	}
	return ""
}

func (x *AllTypeTable) GetBinaryM() []byte {
	if x != nil {
		return x.BinaryM
	}
	return nil
}

func (x *AllTypeTable) GetBlobM() []byte {
	if x != nil {
		return x.BlobM
	}
	return nil
}

func (x *AllTypeTable) GetLBlob() []byte {
	if x != nil {
		return x.LBlob
	}
	return nil
}

func (x *AllTypeTable) GetMBlob() []byte {
	if x != nil {
		return x.MBlob
	}
	return nil
}

func (x *AllTypeTable) GetTBlob() []byte {
	if x != nil {
		return x.TBlob
	}
	return nil
}

func (x *AllTypeTable) GetBitM() []byte {
	if x != nil {
		return x.BitM
	}
	return nil
}

func (x *AllTypeTable) GetEnumM() string {
	if x != nil {
		return x.EnumM
	}
	return ""
}

func (x *AllTypeTable) GetSetM() string {
	if x != nil {
		return x.SetM
	}
	return ""
}

func (x *AllTypeTable) GetBoolM() int64 {
	if x != nil {
		return x.BoolM
	}
	return 0
}

type AllTypeTableId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AllTypeTableId) Reset() {
	*x = AllTypeTableId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_alltypetable_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllTypeTableId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllTypeTableId) ProtoMessage() {}

func (x *AllTypeTableId) ProtoReflect() protoreflect.Message {
	mi := &file_proto_alltypetable_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllTypeTableId.ProtoReflect.Descriptor instead.
func (*AllTypeTableId) Descriptor() ([]byte, []int) {
	return file_proto_alltypetable_api_proto_rawDescGZIP(), []int{1}
}

func (x *AllTypeTableId) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateAllTypeTableReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllTypeTable *AllTypeTable `protobuf:"bytes,1,opt,name=all_type_table,json=allTypeTable,proto3" json:"all_type_table,omitempty"`
	UpdateMask   []string      `protobuf:"bytes,2,rep,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateAllTypeTableReq) Reset() {
	*x = UpdateAllTypeTableReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_alltypetable_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAllTypeTableReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAllTypeTableReq) ProtoMessage() {}

func (x *UpdateAllTypeTableReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_alltypetable_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAllTypeTableReq.ProtoReflect.Descriptor instead.
func (*UpdateAllTypeTableReq) Descriptor() ([]byte, []int) {
	return file_proto_alltypetable_api_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateAllTypeTableReq) GetAllTypeTable() *AllTypeTable {
	if x != nil {
		return x.AllTypeTable
	}
	return nil
}

func (x *UpdateAllTypeTableReq) GetUpdateMask() []string {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type ListAllTypeTablesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// number of page
	Page int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	// default 20
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// order by  for example :  [-id]  -: DESC
	OrderBy string `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	//  id > ?
	IdGt int64 `protobuf:"varint,4,opt,name=id_gt,json=idGt,proto3" json:"id_gt,omitempty"`
}

func (x *ListAllTypeTablesReq) Reset() {
	*x = ListAllTypeTablesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_alltypetable_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllTypeTablesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllTypeTablesReq) ProtoMessage() {}

func (x *ListAllTypeTablesReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_alltypetable_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllTypeTablesReq.ProtoReflect.Descriptor instead.
func (*ListAllTypeTablesReq) Descriptor() ([]byte, []int) {
	return file_proto_alltypetable_api_proto_rawDescGZIP(), []int{3}
}

func (x *ListAllTypeTablesReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListAllTypeTablesReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListAllTypeTablesReq) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *ListAllTypeTablesReq) GetIdGt() int64 {
	if x != nil {
		return x.IdGt
	}
	return 0
}

type ListAllTypeTablesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllTypeTables []*AllTypeTable `protobuf:"bytes,1,rep,name=all_type_tables,json=allTypeTables,proto3" json:"all_type_tables,omitempty"`
	TotalCount    int64           `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	PageCount     int64           `protobuf:"varint,3,opt,name=page_count,json=pageCount,proto3" json:"page_count,omitempty"`
}

func (x *ListAllTypeTablesResp) Reset() {
	*x = ListAllTypeTablesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_alltypetable_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllTypeTablesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllTypeTablesResp) ProtoMessage() {}

func (x *ListAllTypeTablesResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_alltypetable_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllTypeTablesResp.ProtoReflect.Descriptor instead.
func (*ListAllTypeTablesResp) Descriptor() ([]byte, []int) {
	return file_proto_alltypetable_api_proto_rawDescGZIP(), []int{4}
}

func (x *ListAllTypeTablesResp) GetAllTypeTables() []*AllTypeTable {
	if x != nil {
		return x.AllTypeTables
	}
	return nil
}

func (x *ListAllTypeTablesResp) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListAllTypeTablesResp) GetPageCount() int64 {
	if x != nil {
		return x.PageCount
	}
	return 0
}

var File_proto_alltypetable_api_proto protoreflect.FileDescriptor

var file_proto_alltypetable_api_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x6c, 0x6c, 0x74, 0x79, 0x70, 0x65, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9a, 0x06, 0x0a, 0x0c, 0x41, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x49, 0x6e, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x73, 0x5f,
	0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x49, 0x6e, 0x74, 0x12,
	0x13, 0x0a, 0x05, 0x6d, 0x5f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x6d, 0x49, 0x6e, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x62, 0x5f, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x62, 0x49, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x33, 0x32,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x66, 0x33, 0x32, 0x12, 0x10, 0x0a, 0x03, 0x66,
	0x36, 0x34, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x66, 0x36, 0x34, 0x12, 0x23, 0x0a,
	0x0d, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x5f, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x4d, 0x79, 0x73,
	0x71, 0x6c, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x5f, 0x6d, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x72, 0x4d, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x61, 0x72,
	0x63, 0x68, 0x61, 0x72, 0x5f, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x61,
	0x72, 0x63, 0x68, 0x61, 0x72, 0x4d, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x6d,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x73, 0x6f, 0x6e, 0x4d, 0x12, 0x1d, 0x0a,
	0x0a, 0x6e, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x5f, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x4d, 0x12, 0x17, 0x0a, 0x07,
	0x6e, 0x63, 0x68, 0x61, 0x72, 0x5f, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e,
	0x63, 0x68, 0x61, 0x72, 0x4d, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x12, 0x15, 0x0a, 0x06,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x12, 0x1e, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x6d, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69,
	0x6d, 0x65, 0x4d, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x5f, 0x6d, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x4d, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x15, 0x0a, 0x06, 0x79, 0x65, 0x61, 0x72, 0x5f, 0x6d, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x79, 0x65, 0x61, 0x72, 0x4d, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x15, 0x0a,
	0x06, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x6d, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x65, 0x78, 0x74, 0x4d, 0x12, 0x15, 0x0a, 0x06, 0x6c,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x6d, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x4d, 0x12, 0x15, 0x0a,
	0x06, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x6d, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62,
	0x6c, 0x6f, 0x62, 0x4d, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x5f, 0x62, 0x6c, 0x6f, 0x62, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6c, 0x42, 0x6c, 0x6f, 0x62, 0x12, 0x15, 0x0a, 0x06, 0x6d,
	0x5f, 0x62, 0x6c, 0x6f, 0x62, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6d, 0x42, 0x6c,
	0x6f, 0x62, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x62, 0x18, 0x1c, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x74, 0x42, 0x6c, 0x6f, 0x62, 0x12, 0x13, 0x0a, 0x05, 0x62, 0x69, 0x74,
	0x5f, 0x6d, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x69, 0x74, 0x4d, 0x12, 0x15,
	0x0a, 0x06, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x6d, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6e, 0x75, 0x6d, 0x4d, 0x12, 0x13, 0x0a, 0x05, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x18, 0x1f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x65, 0x74, 0x4d, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x6f,
	0x6f, 0x6c, 0x5f, 0x6d, 0x18, 0x20, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x6f, 0x6f, 0x6c,
	0x4d, 0x22, 0x20, 0x0a, 0x0e, 0x41, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x75, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x3b, 0x0a, 0x0e,
	0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x41,
	0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0c, 0x61, 0x6c, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x77, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x13,
	0x0a, 0x05, 0x69, 0x64, 0x5f, 0x67, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x69,
	0x64, 0x47, 0x74, 0x22, 0x96, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a,
	0x0f, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x41, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0d, 0x61,
	0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0x84, 0x03, 0x0a,
	0x13, 0x41, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x15, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x41, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x1a, 0x15, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x41, 0x6c, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x45, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x17,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x41, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x4b, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1e, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e,
	0x41, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x41, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x17, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x41, 0x6c, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x1a, 0x15, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x41, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x52, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_alltypetable_api_proto_rawDescOnce sync.Once
	file_proto_alltypetable_api_proto_rawDescData = file_proto_alltypetable_api_proto_rawDesc
)

func file_proto_alltypetable_api_proto_rawDescGZIP() []byte {
	file_proto_alltypetable_api_proto_rawDescOnce.Do(func() {
		file_proto_alltypetable_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_alltypetable_api_proto_rawDescData)
	})
	return file_proto_alltypetable_api_proto_rawDescData
}

var file_proto_alltypetable_api_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_alltypetable_api_proto_goTypes = []interface{}{
	(*AllTypeTable)(nil),          // 0: example.AllTypeTable
	(*AllTypeTableId)(nil),        // 1: example.AllTypeTableId
	(*UpdateAllTypeTableReq)(nil), // 2: example.UpdateAllTypeTableReq
	(*ListAllTypeTablesReq)(nil),  // 3: example.ListAllTypeTablesReq
	(*ListAllTypeTablesResp)(nil), // 4: example.ListAllTypeTablesResp
	(*emptypb.Empty)(nil),         // 5: google.protobuf.Empty
}
var file_proto_alltypetable_api_proto_depIdxs = []int32{
	0, // 0: example.UpdateAllTypeTableReq.all_type_table:type_name -> example.AllTypeTable
	0, // 1: example.ListAllTypeTablesResp.all_type_tables:type_name -> example.AllTypeTable
	0, // 2: example.AllTypeTableService.CreateAllTypeTable:input_type -> example.AllTypeTable
	1, // 3: example.AllTypeTableService.DeleteAllTypeTable:input_type -> example.AllTypeTableId
	2, // 4: example.AllTypeTableService.UpdateAllTypeTable:input_type -> example.UpdateAllTypeTableReq
	1, // 5: example.AllTypeTableService.GetAllTypeTable:input_type -> example.AllTypeTableId
	3, // 6: example.AllTypeTableService.ListAllTypeTables:input_type -> example.ListAllTypeTablesReq
	0, // 7: example.AllTypeTableService.CreateAllTypeTable:output_type -> example.AllTypeTable
	5, // 8: example.AllTypeTableService.DeleteAllTypeTable:output_type -> google.protobuf.Empty
	0, // 9: example.AllTypeTableService.UpdateAllTypeTable:output_type -> example.AllTypeTable
	0, // 10: example.AllTypeTableService.GetAllTypeTable:output_type -> example.AllTypeTable
	4, // 11: example.AllTypeTableService.ListAllTypeTables:output_type -> example.ListAllTypeTablesResp
	7, // [7:12] is the sub-list for method output_type
	2, // [2:7] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_alltypetable_api_proto_init() }
func file_proto_alltypetable_api_proto_init() {
	if File_proto_alltypetable_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_alltypetable_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllTypeTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_alltypetable_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllTypeTableId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_alltypetable_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAllTypeTableReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_alltypetable_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllTypeTablesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_alltypetable_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllTypeTablesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_alltypetable_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_alltypetable_api_proto_goTypes,
		DependencyIndexes: file_proto_alltypetable_api_proto_depIdxs,
		MessageInfos:      file_proto_alltypetable_api_proto_msgTypes,
	}.Build()
	File_proto_alltypetable_api_proto = out.File
	file_proto_alltypetable_api_proto_rawDesc = nil
	file_proto_alltypetable_api_proto_goTypes = nil
	file_proto_alltypetable_api_proto_depIdxs = nil
}
