syntax="proto3";
package example;
option go_package = "/api";

import "google/protobuf/empty.proto";

service UserService { 
    rpc CreateUser(User)returns(User);
    rpc DeleteUser(UserId)returns(google.protobuf.Empty);
    rpc UpdateUser(UpdateUserReq)returns(User);
    rpc GetUser(UserId)returns(User);
    rpc ListUsers(ListUsersReq)returns(ListUsersResp);
}

message User {
    //id字段
    int64	id = 1 ; // @gotags: json:"id"
    //名称
    string	name = 2 ; // @gotags: json:"name"
    //年龄
    int64	age = 3 ; // @gotags: json:"age"
    //创建时间
    string	ctime = 4 ; // @gotags: json:"ctime"
    //更新时间
    string	mtime = 5 ; // @gotags: json:"mtime"  
}

message UserId{
    int64 id = 1 ; // @gotags: form:"id"
}

message UpdateUserReq{

    User user = 1 ;

    repeated string update_mask  = 2 ;
}


message ListUsersReq{
    // number of page
    int64 page = 1 ;// @gotags: form:"page"
    // default 20
    int64 page_size = 2 ;// @gotags: form:"page_size"
    // order by  for example :  [-id]  -: DESC 
    string order_by = 3 ; // @gotags: form:"order_by"
    //  id > ?
    int64 id_gt = 4; // @gotags: form:"id_gt"
    // filter xxx like %?%
    // string xxx_contains = 5;
    // yyy > ?
    // int64 yyy_gt = 6;

}

message ListUsersResp{

    repeated User users = 1 ; // @gotags: json:"users"

    int64 total_count = 2 ; // @gotags: json:"total_count"
    
    int64 page_count = 3 ; // @gotags: json:"page_count"
}
